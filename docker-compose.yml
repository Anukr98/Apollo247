version: '3.4'

services:
  nginx:
    image: nginx:1.16.0-alpine
    tty: true
    command: ash -c "nginx -t && nginx -g 'daemon off;'"
    ports:
      - 3000:3000
      - 3001:3001
      - 4000:4000
    volumes:
      - ./nginx/log/:/var/log/nginx
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./packages/web-patients/dist/:/usr/share/nginx/html/web-patients:ro
      - ./packages/web-doctors/dist/:/usr/share/nginx/html/web-doctors:ro

  pgweb:
    image: sosedoff/pgweb:0.11.2
    ports:
      - 8081:8081

  web-patients:
    image: node:12.6.0-alpine
    working_dir: /apollo-hospitals/packages/web-patients
    command: ash -c "npm run start"
    environment:
      # Make sure to keep these env vars synced with the following files:
      # cypress.json, webpack.config, and cypress/plugins/webpack-preprocessor
      NPM_CONFIG_CACHE: /apollo-hospitals/.npm-cache
      NODE_ENV: local
      WEB_CLIENT_PORT: 3000
      API_GATEWAY_PORT: 4000
      FIREBASE_PROJECT_ID: apollo-patient-interface
      CYPRESS_INSTALL_BINARY: 0
    volumes:
      - ./:/apollo-hospitals:cached
    depends_on:
      - nginx

  web-doctors:
    image: node:12.6.0-alpine
    working_dir: /apollo-hospitals/packages/web-doctors
    command: ash -c "npm run start"
    environment:
      # Make sure to keep these env vars synced with the following files:
      # cypress.json, webpack.config, and cypress/plugins/webpack-preprocessor
      NPM_CONFIG_CACHE: /apollo-hospitals/.npm-cache
      NODE_ENV: local
      WEB_CLIENT_PORT: 3001
      API_GATEWAY_PORT: 4000
      FIREBASE_PROJECT_ID: apollo-patient-interface
      CYPRESS_INSTALL_BINARY: 0
    volumes:
      - ./:/apollo-hospitals:cached
    depends_on:
      - nginx

  api-gateway:
    image: node:12.6.0
    working_dir: /apollo-hospitals/packages/api
    command:
      bash -c "while ! curl -s http://profiles-service/graphql > /dev/null; do echo waiting for profiles-service...; sleep 5; done;
      bash -c "while ! curl -s http://doctors-service/graphql > /dev/null; do echo waiting for doctors-service...; sleep 5; done;
      npm run start:api-gateway"
    environment:
      NPM_CONFIG_CACHE: /apollo-hospitals/.npm-cache
      NODE_ENV: local
      WEB_CLIENT_PORT: 3000
      API_GATEWAY_PORT: 4000
      GOOGLE_APPLICATION_CREDENTIALS: /apollo-hospitals/packages/api/src/firebase-secrets.json
      FIREBASE_PROJECT_ID: apollo-patient-interface
    volumes:
      - ./:/apollo-hospitals:cached
    depends_on:
      - profiles-service
      - doctors-service
      - nginx

  profiles-service:
    image: node:12.6.0
    working_dir: /apollo-hospitals/packages/api
    command: bash -c "npm run start:profiles-service"
    environment:
      NPM_CONFIG_CACHE: /apollo-hospitals/.npm-cache
      NODE_ENV: local
    volumes:
      - ./:/apollo-hospitals:cached
    depends_on:
      - profiles-db

  profiles-db:
    image: postgres:10.8-alpine
    volumes:
      - ./packages/api/src/profiles-service/init-profiles-db.sql:/docker-entrypoint-initdb.d/init.sql

  doctors-service:
    image: node:12.6.0
    working_dir: /apollo-hospitals/packages/api
    command: bash -c "npm run start:doctors-service"
    environment:
      NPM_CONFIG_CACHE: /apollo-hospitals/.npm-cache
      NODE_ENV: local
    volumes:
      - ./:/apollo-hospitals:cached
