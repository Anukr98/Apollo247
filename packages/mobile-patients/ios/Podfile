$RNFirebaseAsStaticFramework = true

# Uncomment the next line to define a global platform for your project
 platform :ios, '9.0'

target 'ApolloPatient' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for ApolloPatient
  
 # Your 'node_modules' directory is probably in the root of your project,
  # but if not, adjust the `:path` accordingly
  pod 'FBLazyVector', :path => "../node_modules/react-native/Libraries/FBLazyVector"
  pod 'FBReactNativeSpec', :path => "../node_modules/react-native/Libraries/FBReactNativeSpec"
  pod 'RCTRequired', :path => "../node_modules/react-native/Libraries/RCTRequired"
  pod 'RCTTypeSafety', :path => "../node_modules/react-native/Libraries/TypeSafety"
  pod 'React', :path => '../node_modules/react-native/'
  pod 'React-Core', :path => '../node_modules/react-native/'
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
  pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'
  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native/'

  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'ReactCommon/jscallinvoker', :path => "../node_modules/react-native/ReactCommon"
  pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  pod 'GoogleAppMeasurement'
  pod 'GoogleIDFASupport', '~> 3.14.0'
 
  pod 'ReverseExtension'
  pod 'SDWebImage', '~> 5.0'
  pod 'FMDB'
  pod 'AFNetworking', '~> 3.2.1'
  pod 'Charts', '~> 3.0.4'
  pod 'TGFoursquareLocationDetail'
  pod 'IQKeyboardManager'
  pod 'youtube-ios-player-helper', '~> 0.1.4'
  pod 'TwilioChatClient', '2.6.6'
  pod 'JWTDecode', '~> 2.4'
  pod 'Stylish'
 
  pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'
  pod 'react-native-pdf', :path => '../node_modules/react-native-pdf'
  pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler'
  pod 'RNImageCropPicker', :path => '../node_modules/react-native-image-crop-picker'
  pod 'react-native-keep-awake', :path => '../node_modules/react-native-keep-awake'
  pod 'RNDeviceInfo', :path => '../node_modules/react-native-device-info'
  pod 'ReactNativePermissions', :path => '../node_modules/react-native-permissions'
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  pod 'react-native-webview', :path => '../node_modules/react-native-webview'
  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app'
  pod 'RNFBAuth', :path => '../node_modules/@react-native-firebase/auth'
  pod 'RNFBMessaging', :path => '../node_modules/@react-native-firebase/messaging'
  pod 'RNFBRemoteConfig', :path => '../node_modules/@react-native-firebase/remote-config'
  pod 'RNFBCrashlytics', :path => '../node_modules/@react-native-firebase/crashlytics'
  pod 'RNFBAnalytics', :path => '../node_modules/@react-native-firebase/analytics'
  pod 'react-native-netinfo', :path => '../node_modules/@react-native-community/netinfo'
  pod 'opentok-react-native', :path => '../node_modules/opentok-react-native'
  pod 'react-native-webengage', :path => '../node_modules/react-native-webengage'
  pod 'WebEngage', '~> 5.0.2'

  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-community/async-storage'
  pod 'RCTSystemSetting', :path => '../node_modules/react-native-system-setting'
  pod 'RNSound', :path => '../node_modules/react-native-sound'
  pod 'react-native-background-timer', :path => '../node_modules/react-native-background-timer'
  pod 'CodePush', :path => '../node_modules/react-native-code-push'
  pod 'RNDateTimePicker', :path => '../node_modules/@react-native-community/datetimepicker'
  pod 'RNCallKeep', :path => '../node_modules/react-native-callkeep'
  pod 'RNVoipPushNotification', :path => '../node_modules/react-native-voip-push-notification'
  pod 'react-native-geolocation-service', path: '../node_modules/react-native-geolocation-service'

  # React Native Maps dependencies
  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-maps', path: rn_maps_path
  pod 'GoogleMaps', '~> 3.9.0' 
  
  pod 'react-native-document-picker', :path => '../node_modules/react-native-document-picker'
  pod 'react-native-image-resizer', :path => '../node_modules/react-native-image-resizer'
  
  # ServiceExtension Target

  pod 'react-native-progress-view', :path => '../node_modules/@react-native-community/progress-view'

  pod 'react-native-progress-bar-android', :path => '../node_modules/@react-native-community/progress-bar-android'

  pod 'BVLinearGradient', :path => '../node_modules/react-native-linear-gradient'

  pod 'react-native-camera', :path => '../node_modules/react-native-camera'

  pod 'hyper-sdk-react', :path => '../node_modules/hyper-sdk-react'

  pod 'react-native-splash-screen', :path => '../node_modules/react-native-splash-screen'

  pod 'RNShare', :path => '../node_modules/react-native-share/RNShare.podspec'

  pod 'RNSVG', :path => '../node_modules/react-native-svg'
  pod 'ReactNativeWebPFormat', :path => '../node_modules/react-native-webp-format'
  pod 'react-native-appsflyer', :path => '../node_modules/react-native-appsflyer'

  pod 'react-native-html-to-pdf', :path => '../node_modules/react-native-html-to-pdf'

  pod 'clevertap-react-native', :path => '../node_modules/clevertap-react-native'
  
  pod 'react-native-in-app-review', :path => '../node_modules/react-native-in-app-review'

  target 'NotificationService' do
      platform :ios, '10.0'
      pod 'WebEngageBannerPush'
  end

  # ContentExtension Target
  target 'NotificationViewController' do
    platform :ios, '10.0'
    pod 'WebEngageAppEx/ContentExtension'
  end

end
#for static dependencies
pre_install do |installer|
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
end

# post_install do |installer|
#   ## Fix for XCode 12.5
#   find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
#   "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")

#   find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
#   "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
#   find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
#   "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")
# end

# def find_and_replace(dir, findstr, replacestr)
#   Dir[dir].each do |name|
#       text = File.read(name)
#       replace = text.gsub(findstr,replacestr)
#       if text != replace
#           puts "Fix: " + name
#           File.open(name, "w") { |file| file.puts replace }
#           STDOUT.flush
#       end
#   end
#   Dir[dir + '*/'].each(&method(:find_and_replace))
# end
