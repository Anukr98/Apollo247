apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'androidx.navigation.safeargs.kotlin'
import com.android.build.OutputFile

project.ext.react = [
    entryFile: 'index.js',
    enableHermes: false,  // clean and rebuild if changing
]

apply from: '../../node_modules/react-native/react.gradle'

def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = true
def jscFlavor = 'org.webkit:android-jsc:+'
def enableHermes = project.ext.react.get('enableHermes', false);

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId 'com.apollo.patientapp'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 148
        versionName '5.9.3'
        ndk {
            abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
        }
        missingDimensionStrategy 'react-native-camera', 'general'
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include 'armeabi-v7a', 'x86', 'arm64-v8a', 'x86_64'
        }
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
           }
       }
    }
    buildToolsVersion = buildToolsVersion
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ['armeabi-v7a': 1, 'x86': 2, 'arm64-v8a': 3, 'x86_64': 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/APOLLOPA.SF'
        exclude 'base/root/okhttp3/internal/publicsuffix/publicsuffixes.gz'
        exclude 'base/root/org/jsoup/nodes/entities-full.properties'
        exclude 'base/root/META-INF/CHANGES'
        exclude 'base/root/com/appsflyer/internal/b-'
    }
}

dependencies {
    implementation 'com.google.firebase:firebase-messaging:17.3.2'
    implementation 'com.clevertap.android:push-templates:0.0.8'
    implementation 'com.clevertap.android:clevertap-android-sdk:4.2.0'
    implementation 'com.webengage:android-sdk:3.+'
    implementation 'com.google.android.gms:play-services-ads:15.0.1' // optional for webengage
    implementation 'com.android.installreferrer:installreferrer:1.1.1'
    implementation 'com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}'
    implementation 'com.facebook.react:react-native:+'  // From node_modules
    implementation 'com.google.android.gms:play-services-location:18.0.0' // <-- added for activity recognition of google fit
    implementation 'com.google.android.gms:play-services-fitness:18.0.0' 
    implementation 'com.google.android.gms:play-services-auth:19.0.0' //17.0.0
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0' // for serialization error
    implementation 'me.leolin:ShortcutBadger:1.1.21@aar' // <-- Add this line if you wish to use badge on Android
    implementation project(':react-native-receive-sharing-intent')
    implementation project(':react-native-user-agent')
    implementation project(':react-native-in-app-review')
    implementation project(':react-native-html-to-pdf')
    implementation project(':react-native-svg')
    implementation project(':react-native-appsflyer')
    implementation project(':react-native-splash-screen')
    implementation project(':react-native-camera')
    implementation project(':react-native-charts-wrapper')
    implementation project(':@react-native-community_progress-bar-android')
    implementation project(':@react-native-community_progress-view')
    implementation project(':@react-native-community_datetimepicker')
    implementation project(':react-native-image-resizer')
    implementation project(':react-native-code-push')
    implementation project(':react-native-document-picker')
    implementation project(':react-native-callkeep')
    implementation project(':react-native-background-timer')
    implementation project(':react-native-linear-gradient')
    implementation project(':react-native-sound')
    implementation project(':react-native-system-setting')
    implementation project(':opentok-react-native')
    implementation project(':react-native-sms-retriever')
    implementation project(':clevertap-react-native')
    implementation project(':react-native-webengage')
    implementation project(':@react-native-community_async-storage')
    implementation project(':react-native-device-info')
    implementation project(':react-native-webview')
    implementation project(':react-native-pdf')
    implementation project(':rn-fetch-blob')
    implementation project(':react-native-vector-icons')
    implementation project(':react-native-keep-awake')
    implementation project(':react-native-image-crop-picker')
    implementation project(':react-native-gesture-handler')
    implementation project(':react-native-android-location-enabler')
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation project(':@react-native-community_netinfo')
    implementation project(':react-native-set-soft-input-mode')

    //maps dependencies
    implementation(project(':react-native-maps')){
       exclude group: 'com.google.android.gms', module: 'play-services-base'
       exclude group: 'com.google.android.gms', module: 'play-services-maps'
    }
    implementation('com.google.android.gms:play-services-base:17.2.1')
    implementation('com.google.android.gms:play-services-maps:17.0.0')
    implementation('com.android.support:multidex:1.0.3')

    if (enableHermes) {
        def hermesPath = '../../node_modules/hermes-engine/android/';
        debugImplementation files(hermesPath + 'hermes-debug.aar')
        releaseImplementation files(hermesPath + 'hermes-release.aar')
    } else {
        implementation jscFlavor
    }

    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50')
    implementation('androidx.appcompat:appcompat:1.1.0')
    implementation('androidx.core:core-ktx:1.1.0')
    implementation('androidx.constraintlayout:constraintlayout:1.1.3')
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0')
    implementation('androidx.appcompat:appcompat:1.1.0-beta01')
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0')
    implementation('androidx.cardview:cardview:1.0.0')
    implementation('com.google.android.material:material:1.1.0-alpha07')
    implementation('androidx.constraintlayout:constraintlayout:2.0.0-beta4')
    api ('com.google.android.material:material:1.2.0-alpha01')
    implementation('com.github.arimorty:floatingsearchview:2.1.1')
    implementation('com.opentok.android:opentok-android-sdk:2.18.1')

// RX JAVA
    implementation('io.reactivex.rxjava2:rxjava:2.2.5')
    implementation('io.reactivex.rxjava2:rxandroid:2.1.0')

// Retrofit
    implementation('com.squareup.retrofit2:retrofit:2.6.0')
    implementation('com.squareup.retrofit2:converter-gson:2.6.0')
    implementation('com.squareup.retrofit2:adapter-rxjava2:2.6.0')
    
// Glide
    implementation('com.github.bumptech.glide:glide:4.9.0')
    kapt('com.github.bumptech.glide:compiler:4.9.0')

// Room components
    implementation('androidx.room:room-runtime:2.2.0') //2.1.0 => 2.2.0
    kapt('androidx.room:room-compiler:2.2.0')
    implementation('androidx.room:room-ktx:2.2.0')
    implementation('androidx.room:room-rxjava2:2.2.0')

// For Kotlin use lifecycle-reactivestreams-ktx
    implementation('androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0')
    implementation('androidx.lifecycle:lifecycle-extensions:2.1.0')
    implementation('androidx.lifecycle:lifecycle-reactivestreams-ktx:2.1.0')
// Paging
    implementation('androidx.paging:paging-runtime:2.1.0')
// Android X
    implementation('androidx.legacy:legacy-support-v4:1.0.0')
// For Kotlin use lifecycle-reactivestreams-ktx
//Navigation
    implementation('androidx.navigation:navigation-fragment-ktx:2.1.0')
    implementation('androidx.navigation:navigation-ui-ktx:2.1.0')
// Kotlin
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1')
    api('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1')
    api('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1')
// Recurrence Library
    implementation('org.dmfs:rfc5545-datetime:0.2.4')
    implementation('org.dmfs:lib-recur:0.10')
    implementation('com.jakewharton.rxbinding2:rxbinding:2.0.0')
    implementation('com.polidea.rxandroidble2:rxandroidble:1.8.0')
// UI Libraries
    implementation('com.github.arimorty:floatingsearchview:2.1.1')
// Util
    implementation('com.jakewharton.threetenabp:threetenabp:1.1.1')
    implementation('org.jsoup:jsoup:1.10.2')
    implementation('com.squareup.picasso:picasso:2.5.2')
    implementation('com.makeramen:roundedimageview:2.3.0')
    implementation('com.intuit.sdp:sdp-android:1.0.4')
    implementation('joda-time:joda-time:2.9.7')
    implementation('com.opencsv:opencsv:4.1')
// Twilio
    implementation('com.twilio:chat-android:4.2.3') //4.0.2 => 4.2.3
// ToolTip
    implementation('com.github.sephiroth74:android-target-tooltip:2.0.4')
// Work Manager
    implementation('androidx.work:work-runtime-ktx:2.2.0')
    implementation('com.github.PhilJay:MPAndroidChart:v3.1.0')
    implementation('com.jakewharton.timber:timber:4.7.1')
    implementation('androidx.browser:browser:1.0.0')
    implementation('com.google.android:flexbox:2.0.1')
    implementation('in.juspay:google-pay-client-api:1.0.0')
    implementation('in.juspay:hypersdk:2.0.3-rc.06')
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
configurations {
    all {
        exclude module: 'commons-logging'
    }
}
apply from: file('../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle'); applyNativeModulesAppBuildGradle(project)
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply from: '../../node_modules/react-native-code-push/android/codepush.gradle'
googleServices { disableVersionCheck = true }
