# JS bundle for Android debug build
ANDROID_JS_BUNDLE_COMMAND = "cd .. && react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res"
# IOS JS bundle
IOS_JS_BUNDLE_COMMAND = "cd .. && react-native bundle --entry-file='index.js' --bundle-output='./ios/main.jsbundle' --dev=false --platform='ios' --assets-dest='./ios'"
APPCENTER_API_TOKEN_IOS = "918e4591ba138c7577439edb45602195d451be6a"
APPCENTER_API_TOKEN_ANDROID = "e7db103623b83f14fe332193bce56e90697b3db3"
APPCENTER_OWNER_NAME = "sankeerth.obulam-popcornapps.com"
APPCENTER_APP_NAME_IOS = "Apollo"
APPCENTER_APP_NAME_ANDROID = "Apollo-1"
APPCENTER_DISTRIBUTE_DESTINATIONS = "Internal Testers,Bibhas"
APPCENTER_DISTRIBUTE_RELEASE_NOTES = "Env: , ReleaseTag: "
# Set to false if you don't want to notify testers of your new release
APPCENTER_DISTRIBUTE_NOTIFY_TESTERS = true 

platform :android do
  desc 'CodePush to Android Environments'
  lane :codepush do
    UI.message "Fetching Codepush environments for Android: #{APPCENTER_OWNER_NAME}/#{APPCENTER_APP_NAME_ANDROID}"
    sh("appcenter codepush deployment list -a #{APPCENTER_OWNER_NAME}/#{APPCENTER_APP_NAME_ANDROID} --output json") do |status, result, command|
      unless status.success?
      UI.error "Command #{command} failed with status #{status.exitstatus}. Are you logged in via `appcenter login`?"
      end
    environment_labels = JSON.parse(result).map{|e| e.first}
    environment = UI.select("\nWhat environment do you want to target?", environment_labels);
    targetVersion = UI.input("\nWhich app version do you want to target? [You can also change this later from appcenter]");
    sh("cd .. && appcenter codepush release-react -a #{APPCENTER_OWNER_NAME}/#{APPCENTER_APP_NAME_ANDROID} -d #{environment} -t #{targetVersion}") do |status, result, command|
      unless status.success?
        UI.error "Command #{command} failed with status #{status.exitstatus}."
        end
      end
    end
  end

  desc 'Build the Android apk'
  lane :build do
    # gradle(task: 'clean', project_dir: './android/')
    # gradle(task: 'assemble', build_type: 'debug', project_dir: './android')
    gradle(task: 'assemble', build_type: 'Release', project_dir: './android')
  end

  desc 'Build the Android Debug apk'
  lane :build_debug do
    sh(ANDROID_JS_BUNDLE_COMMAND)
    gradle(task: 'clean', project_dir: './android/')
    gradle(task: 'assemble', build_type: 'Debug', project_dir: './android')
  end

  desc 'Build the Android bundle'
  lane :bundle do
    gradle(task: 'bundle', build_type: 'Release', project_dir: './android')
  end

  desc 'Build the Android Debug bundle'
  lane :bundle_debug do
    gradle(task: 'assemble', build_type: 'Debug', project_dir: './android')
  end

  desc 'Build the Android apk and bundle'
  lane :build_bundle do
    gradle(task: ['assemble', 'bundle'], build_type: 'Release', project_dir: './android')
  end

  desc 'Upload Android apk to appcenter'
  lane :appcenter_apk do
    gradle(task: 'clean', project_dir: './android/')
    gradle(task: 'assemble', build_type: 'Release', project_dir: './android')
    appcenter_upload(
      api_token: APPCENTER_API_TOKEN_ANDROID, # Token Name: Fastlane - Upload to Appcenter
      owner_name: APPCENTER_OWNER_NAME,
      owner_type: "user", # Default is user - set to organization for appcenter organizations
      app_name: APPCENTER_APP_NAME_ANDROID,
      file: "./android/app/build/outputs/apk/release/app-release.apk",
      upload_build_only: true,
      notify_testers: APPCENTER_DISTRIBUTE_NOTIFY_TESTERS, # Set to false if you don't want to notify testers of your new release
      destinations: APPCENTER_DISTRIBUTE_DESTINATIONS,
      release_notes: APPCENTER_DISTRIBUTE_RELEASE_NOTES
    )
  end
end


platform :ios do
  desc 'CodePush to IOS Environments'
  lane :codepush do
    UI.message "Fetching Codepush environments for IOS: #{APPCENTER_OWNER_NAME}/#{APPCENTER_APP_NAME_IOS}"
    sh("appcenter codepush deployment list -a #{APPCENTER_OWNER_NAME}/#{APPCENTER_APP_NAME_IOS} --output json") do |status, result, command|
      unless status.success?
      UI.error "Command #{command} failed with status #{status.exitstatus}. Are you logged in via `appcenter login`?"
      end
    environment_labels = JSON.parse(result).map{|e| e.first}
    environment = UI.select("\nWhat environment do you want to target?", environment_labels);
    targetVersion = UI.input("\nWhich app version do you want to target? [You can also change this later from appcenter]");
    sh("cd .. && appcenter codepush release-react -a #{APPCENTER_OWNER_NAME}/#{APPCENTER_APP_NAME_IOS} -d #{environment} -t #{targetVersion}") do |status, result, command|
      unless status.success?
        UI.error "Command #{command} failed with status #{status.exitstatus}."
        end
      end
    end
  end

  desc 'Build the ipa'
  lane :build do
    build_app(
      scheme: "ApolloPatient", 
      workspace: "./ios/ApolloPatient.xcworkspace", 
      export_method: "ad-hoc",
      clean: true,
      silent: true,
      output_directory: "./builds",
      output_name: "Apollo 247.ipa",
      include_symbols: false,
      include_bitcode: false,
      export_options: {
        compileBitcode: false
      },
    )
  end
  desc 'Upload iOS ipa to appcenter'
  lane :appcenter_ipa do
    build_app(
      scheme: "ApolloPatient", 
      workspace: "./ios/ApolloPatient.xcworkspace", 
      export_method: "ad-hoc",
      clean: true,
      silent: true,
      output_directory: "./builds",
      output_name: "Apollo 247.ipa",
      include_symbols: false,
      include_bitcode: false,
      export_options: {
        compileBitcode: false
      },
    )
    appcenter_upload(
      api_token: APPCENTER_API_TOKEN_IOS, # Token Name: Fastlane - Upload to Appcenter
      owner_name: APPCENTER_OWNER_NAME,
      owner_type: "user", # Default is user - set to organization for appcenter organizations
      app_name: APPCENTER_APP_NAME_IOS,
      file: "./builds/Apollo 247.ipa",
      upload_build_only: true,
      notify_testers: APPCENTER_DISTRIBUTE_NOTIFY_TESTERS, # Set to false if you don't want to notify testers of your new release
      destinations: APPCENTER_DISTRIBUTE_DESTINATIONS,
      release_notes: APPCENTER_DISTRIBUTE_RELEASE_NOTES
    )
  end
end
